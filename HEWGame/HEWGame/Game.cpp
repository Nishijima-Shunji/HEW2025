#define NOMINMAX

//*****************************************************************************
//!	@file	ファイル名
//!	@brief	ゲームの基礎
//!	@note	制作中
//!	@author	
//*****************************************************************************

//-----------------------------------------------------------------------------
//	Include header files.
//-----------------------------------------------------------------------------
#include "Game.h"
#include <time.h>
#include <vector>
#include <iostream>


//-----------------------------------------------------------------------------
// プロトタイプ宣言
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// グローバル変数
//-----------------------------------------------------------------------------

// 静的メンバ変数の定義
HWND Game::test = nullptr;

//==============================================================================
//!	@fn		
//!	@brief	
//!	@param	
//!	@param	
//!	@param	
//!	@param	
//!	@retval 
//==============================================================================
void Game::Init(HWND hWnd) {
	srand((unsigned)time(NULL));

	D3D_Create(hWnd);

	test = hWnd;

	//初期シーンをタイトルにする
	sm.ChangeScene(sm.TITLE,0);
	//sm.ChangeScene(sm.SELECT);
	sm.ChangeScene(sm.GAME,3);
	//sm.ChangeScene(sm.RESULT);
}
//==============================================================================
//!	@fn		
//!	@brief	
//!	@param	
//!	@param	
//!	@param	
//!	@param	
//!	@retval 
//==============================================================================
void Game::Draw() {
	// ゲーム処理実行
	D3D_StartRender();
	sm.Render();
	D3D_FinishRender();
}
//==============================================================================
//!	@fn		
//!	@brief	
//!	@param	
//!	@param	
//!	@param	
//!	@param	
//!	@retval 
//==============================================================================
void Game::Uninit() {
	// DirectXの解放処理
	D3D_Release();
}
//==============================================================================
//!	@fn		
//!	@brief	
//!	@param	
//!	@param	
//!	@param	
//!	@param	
//!	@retval 
//==============================================================================
void Game::Update() {
	//シーンセット
	sm.SetScene();
	sm.Update();	//現在シーンのアップデートを実行
}

HWND GetGameWindowHandle() {
	return Game::GetHANDLE();
}


//******************************************************************************
//	End of file.
//******************************************************************************
