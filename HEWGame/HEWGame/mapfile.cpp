//*****************************************************************************
//!	@file	ファイル名
//!	@brief	簡単な説明
//!	@note	メモ
//!	@author	製作者
//*****************************************************************************

//-----------------------------------------------------------------------------
//	Include header files.
//-----------------------------------------------------------------------------
#include "mapfile.h"
#include <iostream>
#include <fstream>
#include <sstream>

//-----------------------------------------------------------------------------
// プロトタイプ宣言
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// グローバル変数
//-----------------------------------------------------------------------------


//==============================================================================
//!	@fn		
//!	@brief	
//!	@param	
//!	@param	
//!	@param	
//!	@param	
//!	@retval 
//==============================================================================
std::vector<int> Loadmap(const char* filePath) {
	//返す配列
	std::vector<int> DataTable(70);

	//ファイルオープン
	std::ifstream fileStream(filePath);
	if (!fileStream)
	{
		std::cout << "ファイルオープン失敗" << std::endl;
		return DataTable;
	}

	//何行目か
	int i = 0;

	//ファイルが終わるまで読み込み
	while (!fileStream.eof())
	{
		i++;
		std::string bufferString;
		fileStream >> bufferString;

		//データを項目ごとに抽出
		std::istringstream stringStream(bufferString);
		std::vector<std::string> datas;
		std::string tmp;
		//カンマ区切りでデータを切り分け
		while (getline(stringStream, tmp, ','))
		{
			datas.push_back(tmp);
		}

		if (i <= MAP_HEIGHT) {
			//各番号を配列に格納
			for (int j = 0; j < MAP_WIDTH; j++) {
				DataTable[((i - 1) * 10) + j] = strtof(datas[j].c_str(), NULL);	//各行のデータを1次元配列に格納
			}
		}
	}
	//ファイルクローズ
	fileStream.close();
	return DataTable;
}

//******************************************************************************
//	End of file.
//******************************************************************************
